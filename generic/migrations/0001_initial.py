# Generated by Django 2.1.1 on 2019-04-30 09:32

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rbac', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveIntegerField(verbose_name='班级(期)')),
                ('price', models.PositiveIntegerField(verbose_name='学费')),
                ('start_date', models.DateField(verbose_name='开班时间')),
                ('graduate_date', models.DateField(blank=True, null=True, verbose_name='结业时间')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='说明')),
            ],
        ),
        migrations.CreateModel(
            name='ConsultRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(verbose_name='跟进内容')),
                ('date', models.DateField(auto_now_add=True, verbose_name='跟进日期')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='课程名称')),
            ],
        ),
        migrations.CreateModel(
            name='CourseRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_num', models.IntegerField(verbose_name='节次')),
                ('date', models.DateField(auto_now_add=True, verbose_name='上课日期')),
                ('class_object', models.ForeignKey(on_delete='cascade', to='generic.Classes', verbose_name='班级')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='姓名')),
                ('qq', models.CharField(help_text='QQ号/微信/手机号', max_length=64, unique=True, verbose_name='联系方式')),
                ('status', models.IntegerField(choices=[(1, '已报名'), (2, '未报名')], default=2, verbose_name='状态')),
                ('gender', models.SmallIntegerField(choices=[(1, '男'), (2, '女')], verbose_name='性别')),
                ('source', models.SmallIntegerField(choices=[(1, 'qq群'), (2, '内部转介绍'), (3, '官方网站'), (4, '百度推广'), (5, '360推广'), (6, '搜狗推广'), (7, '腾讯课堂'), (8, '广点通'), (9, '高校宣讲'), (10, '渠道代理'), (11, '51cto'), (12, '智汇推'), (13, '网盟'), (14, 'DSP'), (15, 'SEO'), (16, '其它')], default=1, verbose_name='客户来源')),
                ('education', models.IntegerField(blank=True, choices=[(1, '重点大学'), (2, '普通本科'), (3, '独立院校'), (4, '民办本科'), (5, '大专'), (6, '民办专科'), (7, '高中'), (8, '其他')], null=True, verbose_name='学历')),
                ('graduation_school', models.CharField(blank=True, max_length=64, null=True, verbose_name='毕业学校')),
                ('major', models.CharField(blank=True, max_length=64, null=True, verbose_name='所学专业')),
                ('experience', models.IntegerField(blank=True, choices=[(1, '在校生'), (2, '应届毕业'), (3, '半年以内'), (4, '半年至一年'), (5, '一年至三年'), (6, '三年至五年'), (7, '五年以上')], null=True, verbose_name='工作经验')),
                ('work_status', models.IntegerField(blank=True, choices=[(1, '在职'), (2, '无业')], default=1, null=True, verbose_name='职业状态')),
                ('company', models.CharField(blank=True, max_length=64, null=True, verbose_name='目前就职公司')),
                ('salary', models.CharField(blank=True, max_length=64, null=True, verbose_name='当前薪资')),
                ('date', models.DateField(auto_now_add=True, verbose_name='咨询日期')),
                ('last_consult_date', models.DateField(auto_now_add=True, verbose_name='最后跟进日期')),
            ],
        ),
        migrations.CreateModel(
            name='DepartMent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='部门')),
            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True, verbose_name='作业内容')),
                ('status', models.IntegerField(choices=[(1, '作业未发布'), (2, '学生未提交'), (3, '讲师未批改'), (4, '讲师已批改-合格'), (5, '讲师已批改-不合格')], default=1)),
                ('file', models.FileField(blank=True, null=True, upload_to='homework/%Y/%m/%d/')),
                ('critic', models.TextField(blank=True, null=True, verbose_name='作业批语')),
                ('classes', models.ForeignKey(on_delete='cascade', to='generic.Classes', verbose_name='班级')),
                ('courses', models.ForeignKey(on_delete='cascade', to='generic.Course', verbose_name='课程')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_type', models.IntegerField(choices=[(1, '报名费'), (2, '学费'), (3, '退学'), (4, '其他')], default=1, verbose_name='费用类型')),
                ('paid_fee', models.IntegerField(default=0, verbose_name='金额')),
                ('apply_date', models.DateTimeField(auto_now_add=True, verbose_name='申请日期')),
                ('confirm_status', models.IntegerField(choices=[(1, '申请中'), (2, '已确认'), (3, '已驳回')], default=1, verbose_name='确认状态')),
                ('confirm_date', models.DateTimeField(blank=True, null=True, verbose_name='确认日期')),
                ('note', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('classes', models.ForeignKey(on_delete='cascade', to='generic.Classes', verbose_name='申请班级')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='校区名')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='理由')),
                ('score', models.IntegerField(help_text='违纪扣分写负值，表现邮寄加分写正值', verbose_name='分值')),
            ],
        ),
        migrations.CreateModel(
            name='Staffinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('email', models.EmailField(max_length=32, verbose_name='邮箱')),
                ('realname', models.CharField(max_length=32, verbose_name='真实姓名')),
                ('phone', models.CharField(max_length=11, verbose_name='手机号')),
                ('gender', models.IntegerField(choices=[(1, '男'), (2, '女'), (3, '其他')], verbose_name='性别')),
                ('depart', models.ForeignKey(on_delete='cascade', to='generic.DepartMent', verbose_name='部门')),
                ('roles', models.ManyToManyField(blank=True, to='rbac.Role', verbose_name='所属角色')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qq', models.CharField(max_length=32, verbose_name='QQ号')),
                ('mobile', models.CharField(max_length=32, verbose_name='手机号')),
                ('emergency_contract', models.CharField(max_length=32, verbose_name='紧急联系人电话')),
                ('student_status', models.IntegerField(choices=[(1, '申请中'), (2, '在读'), (3, '毕业'), (4, '退学')], default=1, verbose_name='学员状态')),
                ('score', models.IntegerField(default=100, verbose_name='积分')),
                ('memo', models.TextField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('classes', models.ManyToManyField(blank=True, to='generic.Classes', verbose_name='已报班级')),
                ('customer', models.OneToOneField(on_delete='cascade', to='generic.Customer', verbose_name='客户信息')),
            ],
        ),
        migrations.CreateModel(
            name='StudyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record', models.CharField(choices=[('checked', '已签到'), ('vacate', '请假'), ('late', '迟到'), ('noshow', '缺勤'), ('leave_early', '早退')], default='checked', max_length=64, verbose_name='上课纪录')),
                ('course_record', models.ForeignKey(on_delete='cascade', to='generic.CourseRecord', verbose_name='第几天课程')),
                ('homework', models.ForeignKey(blank=True, null=True, on_delete='cascade', to='generic.Homework', verbose_name='作业完成情况')),
                ('student', models.ForeignKey(on_delete='cascade', to='generic.Student', verbose_name='学员')),
            ],
        ),
        migrations.AddField(
            model_name='scorerecord',
            name='student',
            field=models.ForeignKey(on_delete='cascade', to='generic.Student', verbose_name='学生'),
        ),
        migrations.AddField(
            model_name='scorerecord',
            name='user',
            field=models.ForeignKey(on_delete='cascade', to='generic.Staffinfo', verbose_name='执行人'),
        ),
        migrations.AddField(
            model_name='paymentrecord',
            name='confirm_user',
            field=models.ForeignKey(blank=True, null=True, on_delete='cascade', related_name='confirms', to='generic.Staffinfo', verbose_name='审批人'),
        ),
        migrations.AddField(
            model_name='paymentrecord',
            name='consultant',
            field=models.ForeignKey(help_text='谁签的单就选谁', on_delete='cascade', to='generic.Staffinfo', verbose_name='课程顾问'),
        ),
        migrations.AddField(
            model_name='paymentrecord',
            name='customer',
            field=models.ForeignKey(on_delete='cascade', to='generic.Customer', verbose_name='客户'),
        ),
        migrations.AddField(
            model_name='homework',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete='cascade', to='generic.Student', verbose_name='学生'),
        ),
        migrations.AddField(
            model_name='homework',
            name='teacher',
            field=models.ForeignKey(on_delete='cascade', to='generic.Staffinfo', verbose_name='讲师'),
        ),
        migrations.AddField(
            model_name='customer',
            name='consultant',
            field=models.ForeignKey(blank=True, limit_choices_to={'depart__title': '销售部'}, null=True, on_delete='cascade', related_name='consultant', to='generic.Staffinfo', verbose_name='课程顾问'),
        ),
        migrations.AddField(
            model_name='customer',
            name='course',
            field=models.ManyToManyField(to='generic.Course', verbose_name='咨询课程'),
        ),
        migrations.AddField(
            model_name='customer',
            name='referral_from',
            field=models.ForeignKey(blank=True, help_text='若此客户是转介绍自内部学员,请在此处选择内部学员姓名', null=True, on_delete='cascade', related_name='internal_referral', to='generic.Customer', verbose_name='转介绍自学员'),
        ),
        migrations.AddField(
            model_name='courserecord',
            name='teacher',
            field=models.ForeignKey(on_delete='cascade', to='generic.Staffinfo', verbose_name='讲师'),
        ),
        migrations.AddField(
            model_name='consultrecord',
            name='consultant',
            field=models.ForeignKey(limit_choices_to={'depart__title__in': ['销售部', '运营部']}, on_delete='cascade', to='generic.Staffinfo', verbose_name='跟进人'),
        ),
        migrations.AddField(
            model_name='consultrecord',
            name='customer',
            field=models.ForeignKey(on_delete='cascade', to='generic.Customer', verbose_name='所咨询客户'),
        ),
        migrations.AddField(
            model_name='classes',
            name='class_teacher',
            field=models.ForeignKey(limit_choices_to={'depart__title': '教职部'}, on_delete='cascade', related_name='classes', to='generic.Staffinfo', verbose_name='班主任'),
        ),
        migrations.AddField(
            model_name='classes',
            name='course',
            field=models.ForeignKey(on_delete='cascade', to='generic.Course', verbose_name='课程'),
        ),
        migrations.AddField(
            model_name='classes',
            name='school',
            field=models.ForeignKey(on_delete='cascade', to='generic.School', verbose_name='校区'),
        ),
        migrations.AddField(
            model_name='classes',
            name='tech_teachers',
            field=models.ManyToManyField(blank=True, limit_choices_to={'depart__title__in': ['python教学部', 'linux教学部', 'go教学部', 'java教学部']}, related_name='tech_classes', to='generic.Staffinfo', verbose_name='任课老师'),
        ),
    ]
